# Generated by Django 4.2 on 2025-07-25 20:38

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('srm', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=225, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sequential_id', models.PositiveIntegerField()),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_applied', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('current_status', models.CharField(choices=[('ordered', 'Ordered'), ('received', 'Received in Warehouse'), ('quality_check', 'Quality Check'), ('ready_for_sale', 'Ready for Sale'), ('reserved', 'Reserved'), ('sold', 'Sold'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('returned', 'Returned'), ('discarded', 'Discarded')], default='ordered', max_length=20)),
                ('status_changed', models.DateTimeField(auto_now=True)),
                ('date_ordered', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_received', models.DateTimeField(blank=True, null=True)),
                ('date_quality_check', models.DateTimeField(blank=True, null=True)),
                ('date_ready_for_sale', models.DateTimeField(blank=True, null=True)),
                ('date_reserved', models.DateTimeField(blank=True, null=True)),
                ('date_sold', models.DateTimeField(blank=True, null=True)),
                ('date_shipped', models.DateTimeField(blank=True, null=True)),
                ('date_delivered', models.DateTimeField(blank=True, null=True)),
                ('date_returned', models.DateTimeField(blank=True, null=True)),
                ('date_discarded', models.DateTimeField(blank=True, null=True)),
                ('purchase_order_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_carrier', models.CharField(blank=True, max_length=100, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('location_in_warehouse', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('quality_check_passed', models.BooleanField(blank=True, null=True)),
                ('quality_check_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'ordering': ['-status_changed'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('min_stock', models.PositiveIntegerField(default=0)),
                ('max_stock', models.PositiveIntegerField(default=0)),
                ('quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_bulk', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatusChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(choices=[('ordered', 'Ordered'), ('received', 'Received in Warehouse'), ('quality_check', 'Quality Check'), ('ready_for_sale', 'Ready for Sale'), ('reserved', 'Reserved'), ('sold', 'Sold'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('returned', 'Returned'), ('discarded', 'Discarded')], max_length=20)),
                ('new_status', models.CharField(choices=[('ordered', 'Ordered'), ('received', 'Received in Warehouse'), ('quality_check', 'Quality Check'), ('ready_for_sale', 'Ready for Sale'), ('reserved', 'Reserved'), ('sold', 'Sold'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('returned', 'Returned'), ('discarded', 'Discarded')], max_length=20)),
                ('change_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_logs', to='inventory.inventoryitem')),
            ],
            options={
                'verbose_name': 'Status Change Log',
                'verbose_name_plural': 'Status Change Logs',
                'ordering': ['-change_date'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('barcode', models.CharField(max_length=50, unique=True)),
                ('stock', models.IntegerField(default=0)),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.brand')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='inventory.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='product_variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='inventory.productvariant'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='srm.supplier'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['current_status'], name='inventory_i_current_8badba_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['status_changed'], name='inventory_i_status__2f71d8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='inventoryitem',
            unique_together={('product_variant', 'sequential_id')},
        ),
    ]
